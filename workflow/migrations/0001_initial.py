# Generated by Django 4.0.6 on 2024-03-24 22:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="en", max_length=5, verbose_name="language"
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC", max_length=20, verbose_name="timezone"
                    ),
                ),
                (
                    "two_factor_verification",
                    models.BooleanField(
                        default=False, verbose_name="two factor verification"
                    ),
                ),
                (
                    "json_data",
                    models.TextField(blank=True, null=True, verbose_name="json data"),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="is verified"),
                ),
                ("password", models.CharField(max_length=256, verbose_name="password")),
                ("is_bot", models.BooleanField(default=False, verbose_name="is bot")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Space",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="modified"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="name"
                    ),
                ),
                (
                    "realm_code",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="realm_code"
                    ),
                ),
                (
                    "space_code",
                    models.CharField(max_length=255, verbose_name="space_code"),
                ),
            ],
            options={
                "ordering": ["created"],
                "get_latest_by": "modified",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Workflow",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="modified"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="name"
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        blank=True, max_length=1024, null=True, verbose_name="user_code"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("init", "INIT"),
                            ("pending", "PENDING"),
                            ("progress", "PROGRESS"),
                            ("success", "SUCCESS"),
                            ("error", "ERROR"),
                            ("timeout", "TIMEOUT"),
                            ("canceled", "CANCELED"),
                        ],
                        default="init",
                        max_length=255,
                        null=True,
                        verbose_name="status",
                    ),
                ),
                (
                    "payload_data",
                    models.TextField(
                        blank=True, null=True, verbose_name="payload data"
                    ),
                ),
                (
                    "periodic",
                    models.BooleanField(default=False, verbose_name="periodic"),
                ),
                (
                    "is_manager",
                    models.BooleanField(default=False, verbose_name="is manager"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workflows",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="owner",
                    ),
                ),
                (
                    "space",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workflows",
                        to="workflow.space",
                        verbose_name="space",
                    ),
                ),
            ],
            options={
                "ordering": ["-created", "id"],
                "get_latest_by": "modified",
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="modified"
                    ),
                ),
                ("celery_task_id", models.CharField(max_length=255, null=True)),
                ("name", models.CharField(max_length=255, null=True)),
                ("source_code", models.CharField(max_length=255, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("init", "INIT"),
                            ("pending", "PENDING"),
                            ("progress", "PROGRESS"),
                            ("success", "SUCCESS"),
                            ("error", "ERROR"),
                            ("timeout", "TIMEOUT"),
                            ("canceled", "CANCELED"),
                        ],
                        default="init",
                        max_length=255,
                        null=True,
                        verbose_name="status",
                    ),
                ),
                ("type", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "payload_data",
                    models.TextField(
                        blank=True, null=True, verbose_name="payload data"
                    ),
                ),
                (
                    "result_data",
                    models.TextField(blank=True, null=True, verbose_name="result data"),
                ),
                (
                    "progress_data",
                    models.TextField(
                        blank=True, null=True, verbose_name="progress data"
                    ),
                ),
                ("log", models.TextField(blank=True, null=True, verbose_name="log")),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, null=True, verbose_name="error message"
                    ),
                ),
                ("verbose_name", models.CharField(max_length=255, null=True)),
                (
                    "verbose_result",
                    models.TextField(
                        blank=True, null=True, verbose_name="verbose result"
                    ),
                ),
                (
                    "previous_data",
                    models.TextField(
                        blank=True, null=True, verbose_name="previous data"
                    ),
                ),
                ("is_hook", models.BooleanField(default=False, verbose_name="is hook")),
                (
                    "finished_at",
                    models.DateTimeField(
                        db_index=True, null=True, verbose_name="finished at"
                    ),
                ),
                (
                    "space",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="workflow.space",
                        verbose_name="space",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="workflow.workflow",
                        verbose_name="workflow",
                    ),
                ),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
    ]
